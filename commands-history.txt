gem install rails-api
rails-api new api-blog

cd api-blog
git init
git add .
git commit -m "skeleton + pry+pg gems"
git remote add origin https://github.com/virgi1974/api-blog.git
git push -u origin master

bundle install
rake db:create

rails-api g scaffold user email:string password:string auth_token:string
git commit -m "user scaffold"

git commit -m "api/v1 namespace+version structure for usersController"

git commit -m "gems for testing"

rails g rspec:install
config/application.rb
  # don't generate RSpec tests for views and helpers
        config.generators do |g|
          g.test_framework :rspec, fixture: true
          g.fixture_replacement :factory_girl, dir: 'spec/factories'
          g.view_specs false
          g.helper_specs false
          g.stylesheets = false
          g.javascripts = false
          g.helper = false
        end

#factory for users
  FactoryGirl.define do
    factory :user do
      email { FFaker::Internet.email }
      password "12345678"
      auth_token "4J-f5HEHeDL_W9-dospW"
    end
  end

# TESTING USER-MODEL

# SHOULDA-MATCHERS
# Gemfile
group :test do
   gem 'shoulda-matchers', require: false
end

#  in spec_helper.rb we have to integrate it with Rspec
Shoulda::Matchers.configure do |config|
  config.integrate do |with|
    with.test_framework :rspec
    with.library :rails
  end
end

# TDD validations uniqueness+presence
  it { should validate_presence_of(:auth_token) }
  validates :auth_token, presence: true

# TDD controller methods
we create the same structure for testing controllers that the one we have
for controllers themselves ap>v1>userscontroller.rb

before we test-create the usersController methods we need to change how the 
password is stored --> we need a 'digest' password

gem 'bcrypt'
userModel --> has_secure_password
we need a confirmation password field 
we need a 'password_digest' field --> rename_column :users, :password, :password_digest

# we create a module for some methods so we keep orr code DRY --> spec/support/request_helpers.rb
module Request
  module JsonHelpers
    def json_response

      # 
RSpec.configure do |config|
  *******************
  config.include Request::JsonHelpers, type: :controller
end



















